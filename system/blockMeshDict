/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  9
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1;

// flow along z axis (towards -z)
// inlet is at (0 0 0), outlet at (0 0 -$pipeEnd)
// DIMENSIONS SETTINGS
pipeStart			      0;
pipeEnd      		      1.02;
pipeDiameter 		      12.7e-3;
pipeRadius                #calc "$pipeDiameter/2";
innerSquareCoord          #calc "0.25*$pipeRadius";
diagonalPointCoord        #calc "Foam::sqrt($pipeRadius*$pipeRadius/2)";
// NODES DISTRIBUTION SETTINGS
inflationRate             0.125;
inletPartNodesNum         500;
radialDirNodesNum         25;
squareUniformNodesNum     10;
tangentialDirNodesNum     $squareUniformNodesNum;

vertices
(
	// (0 0 0) is origin
    (-$innerSquareCoord  $innerSquareCoord  $pipeStart)				// 0
    ( $innerSquareCoord  $innerSquareCoord  $pipeStart)    			// 1
    ( $innerSquareCoord -$innerSquareCoord  $pipeStart)    			// 2
    (-$innerSquareCoord -$innerSquareCoord  $pipeStart)    			// 3

    (-$diagonalPointCoord	 $diagonalPointCoord  $pipeStart)		// 4
    ( $diagonalPointCoord	 $diagonalPointCoord  $pipeStart) 		// 5
    ( $diagonalPointCoord	-$diagonalPointCoord  $pipeStart) 		// 6
    (-$diagonalPointCoord	-$diagonalPointCoord  $pipeStart) 		// 7

    (-$innerSquareCoord  $innerSquareCoord  -$pipeEnd)			// 8
    ( $innerSquareCoord  $innerSquareCoord  -$pipeEnd)    		// 9
    ( $innerSquareCoord -$innerSquareCoord  -$pipeEnd)    		// 10
    (-$innerSquareCoord -$innerSquareCoord  -$pipeEnd)    		// 11

    (-$diagonalPointCoord	 $diagonalPointCoord  -$pipeEnd)		// 12
    ( $diagonalPointCoord	 $diagonalPointCoord  -$pipeEnd) 	// 13
    ( $diagonalPointCoord	-$diagonalPointCoord  -$pipeEnd) 	// 14
    (-$diagonalPointCoord	-$diagonalPointCoord  -$pipeEnd) 	// 15

);

blocks
(
	// Inlet part
    hex (0 1 2 3 8 9 10 11)       ($squareUniformNodesNum $squareUniformNodesNum $inletPartNodesNum) simpleGrading (1 1 1)  // 0
    hex (0 4 5 1 8 12 13 9)       ($radialDirNodesNum $tangentialDirNodesNum $inletPartNodesNum) simpleGrading ($inflationRate 1 1)  // 1
    hex (1 5 6 2 9 13 14 10)      ($radialDirNodesNum $tangentialDirNodesNum $inletPartNodesNum) simpleGrading ($inflationRate 1 1)  // 2
    hex (2 6 7 3 10 14 15 11)     ($radialDirNodesNum $tangentialDirNodesNum $inletPartNodesNum) simpleGrading ($inflationRate 1 1)  // 3
    hex (3 7 4 0 11 15 12 8)      ($radialDirNodesNum $tangentialDirNodesNum $inletPartNodesNum) simpleGrading ($inflationRate 1 1)  // 4

);

edges
(
	arc 4 5   ($pipeStart $pipeRadius  $pipeStart)       // block 1
	arc 12 13 ($pipeStart $pipeRadius -$pipeEnd)      // block 1
	arc 5 6   ($pipeRadius $pipeStart  $pipeStart)       // block 2
	arc 13 14 ($pipeRadius $pipeStart -$pipeEnd)      // block 2
	arc 6 7   ($pipeStart -$pipeRadius  $pipeStart)      // block 3
	arc 14 15 ($pipeStart -$pipeRadius -$pipeEnd)     // block 3
	arc 7 4   (-$pipeRadius $pipeStart  $pipeStart)      // block 4
	arc 15 12 (-$pipeRadius $pipeStart -$pipeEnd)     // block 4
);

boundary
(
    INLET
    {
        type patch;
        faces
        (
            (0 4 5 1)
            (5 6 2 1)
            (2 6 7 3)
            (3 7 4 0)
            (0 1 2 3)
        );
    }
    OUTLET
    {
        type patch;
        faces
        (
            (8 12 13 9)
            (13 14 10 9)
            (10 14 15 11)
            (11 15 12 8)
            (8 9 10 11)
        );
    }
    WALL
    {
        type wall;
        faces
        (
            (4 5 13 12)
            (5 6 14 13)
            (15 14 6 7)
            (7 4 12 15)
        );
    }
);

mergePatchPairs
(
);

// ************************************************************************* //
